// Generated by CoffeeScript 1.6.3
(function() {
  var DAM_SQUARE, DEFAULT_MAGNIFICATION, GreatCircle, MAX_DISTANCE, centerMap, coordinatesInAms, map, meMarker, rentalTemplateFn,
    _this = this;

  DAM_SQUARE = {
    lat: 52.373,
    lng: 4.893
  };

  DEFAULT_MAGNIFICATION = 14;

  MAX_DISTANCE = 12;

  GreatCircle = {
    deg2rad: function(deg) {
      return deg * Math.PI / 180;
    },
    rad2deg: function(rad) {
      return rad * 180 / Math.PI;
    },
    R_KAVRAISKOGO: 6373,
    NINE_MINUTES_IN_RAD: 0.00261799388,
    latGeoToSpherical: function(thetaGeoDeg) {
      var theta;
      theta = this.deg2rad(thetaGeoDeg);
      return theta - (this.NINE_MINUTES_IN_RAD * (Math.sin(2 * theta)));
    },
    distance: function(lat1, lon1, lat2, lon2) {
      var cosDist, deltaL;
      lat1 = this.latGeoToSpherical(lat1);
      lon1 = this.deg2rad(lon1);
      lat2 = this.latGeoToSpherical(lat2);
      lon2 = this.deg2rad(lon2);
      deltaL = lon1 - lon2;
      cosDist = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(deltaL);
      return Math.round(Math.acos(cosDist) * this.R_KAVRAISKOGO);
    }
  };

  coordinatesInAms = function(latlon) {
    var distance;
    distance = GreatCircle.distance(latlon.lat, latlon.lng, DAM_SQUARE.lat, DAM_SQUARE.lng);
    return distance < MAX_DISTANCE;
  };

  centerMap = function(latlon) {
    var meMarker;
    meMarker = L.marker(new L.LatLng(latlon.lat, latlon.lng), {
      icon: L.mapbox.marker.icon({
        'marker-color': 'bb0000',
        'marker-symbol': 'star-stroked',
        "marker-size": 'large'
      }),
      draggable: true
    });
    return meMarker.addTo(map);
  };

  map = L.mapbox.map('map', 'karenishe.map-pxxvu0dq', {
    detectRetina: true,
    retinaVersion: 'karenishe.map-2s2oc75l'
  }).addControl(L.mapbox.geocoderControl('karenishe.map-pxxvu0dq'));

  meMarker = null;

  if (navigator.geolocation) {
    map.on('locationfound', function(e) {
      if (coordinatesInAms(e.latlng)) {
        map.fitBounds(e.bounds);
        return centerMap(e.latlng);
      } else {
        return centerMap(DAM_SQUARE);
      }
    });
    map.on('locationerror', function() {
      return centerMap(DAM_SQUARE);
    });
    map.locate();
  } else {
    map.setView([DAM_SQUARE.lat, DAM_SQUARE.lng], DEFAULT_MAGNIFICATION);
  }

  rentalTemplateFn = Handlebars.compile($("#rentaltpl").html());

  L.mapbox.markerLayer().addTo(map).on('ready', function(e) {
    return e.target.eachLayer(function(marker) {
      var content;
      content = rentalTemplateFn(marker.feature.properties);
      return marker.bindPopup(content, {
        closeButton: true,
        maxWidth: 200
      });
    });
  }).loadURL('markers.geojson');

}).call(this);
